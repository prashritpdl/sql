<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/paude/Downloads/Ex_Files_SQL_EssT/Ex_Files_SQL_EssT/Exercise Files/WSDA_Music.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="5253"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainAlbum"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="84"/><column index="2" value="280"/><column index="3" value="76"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="111"/><column index="2" value="97"/><column index="3" value="105"/><column index="4" value="300"/><column index="5" value="300"/><column index="6" value="167"/><column index="7" value="55"/><column index="8" value="124"/><column index="9" value="106"/><column index="10" value="165"/><column index="11" value="157"/><column index="12" value="233"/><column index="13" value="131"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Employee" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="5" mode="0"/></sort><column_widths><column index="1" value="112"/><column index="2" value="95"/><column index="3" value="97"/><column index="4" value="157"/><column index="5" value="98"/><column index="6" value="162"/><column index="7" value="162"/><column index="8" value="228"/><column index="9" value="85"/><column index="10" value="55"/><column index="11" value="78"/><column index="12" value="106"/><column index="13" value="148"/><column index="14" value="148"/><column index="15" value="214"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Genre" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="80"/><column index="2" value="144"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="InvoiceLine" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="129"/><column index="2" value="93"/><column index="3" value="75"/><column index="4" value="88"/><column index="5" value="84"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="MediaType" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="121"/><column index="2" value="212"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Playlist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="91"/><column index="2" value="199"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="1.sql">SELECT
c.LastName,
c.FirstName,
i. Invoiceid,
i.customerid,
i.InvoiceDate,
i.total
FROM
Invoice AS i
INNER JOIN
Customer AS c
ON
i.CustomerId = c.CustomerId
ORDER by c.CustomerId
</sql><sql name="3.sql">SELECT
InvoiceDate,
BillingAddress,
BillingCity,
total
FROM
Invoice
WHERE
BillingCity IN('Brussels','Orlando','Paris')
ORDER by
total
</sql><sql name="4.sql">SELECT
InvoiceDate,
BillingAddress,
BillingCity,
total
FROM
Invoice
WHERE
BillingCity like'% B%'
ORDER by
total
</sql><sql name="5.sql">-- how many invoices were billed on 2010-05-22 00:00:00?
SELECT
InvoiceDate,
BillingAddress,
BillingCity,
total
FROM
Invoice
WHERE
DATE(InvoiceDate) = '2010-05-22'
ORDER by
total</sql><sql name="6.sql">-- how many invoices were billed on 2010-05-22 00:00:00?
SELECT
InvoiceDate,
BillingAddress,
BillingCity,
total
FROM
Invoice
WHERE
DATE(InvoiceDate)&gt;'2010-05-22' AND total &lt; 3.00 b
ORDER by
total</sql><sql name="7.sql">-- how many invoices were billed on 2010-05-22 00:00:00?
SELECT
InvoiceDate,
BillingAddress,
BillingCity,
total
FROM
Invoice
WHERE
BillingCity like 'P%' OR BillingCity LIKE 'D%'
ORDER by
InvoiceDate</sql><sql name="8.sql">-- how many invoices were billed on 2010-05-22 00:00:00?
SELECT
InvoiceDate,
BillingAddress,
BillingCity,
total,
CASE
WHEN total&lt;2.00 THEN 'Baseline Purchase'
WHEN total BETWEEN 2.00 AND 6.99 THEN 'Low Purchase'
when total BETWEEN 7.00 AND 15.00 THEN 'Target Purchase'
ELSE 'Top Performer'
END AS 'Purchase Type'
FROM
Invoice
ORDER by
InvoiceDate</sql><sql name="9.sql">SELECT
*
FROM
Invoice
INNER JOIN
Customer
ON
Invoice.CustomerId = Customer.CustomerId
ORDER by customer.CustomerId
</sql><sql name="10.sql">SELECT
c.LastName,
c.FirstName,
i. Invoiceid,
i.customerid,
i.InvoiceDate,
i.total
FROM
Invoice AS i
INNER JOIN
Customer AS c
ON
i.CustomerId = c.CustomerId
ORDER by c.CustomerId
</sql><sql name="11.sql">SELECT
e.FirstName,
e.LastName,
e.EmployeeId,
c.FirstName,
c.LastName,
c.SupportRepId,
i.CustomerId,
i.total

FROM
Invoice AS i
INNER JOIN
Customer AS c
ON
i.customerid = c.CustomerId
INNER JOIN 
Employee AS e
ON
c.SupportRepId = e.EmployeeId
ORDER BY
i.total DESC 
LIMIT 10</sql><sql name="12.sql">/*
connecting strings 
combining different strings to form the mailing address
*/
SELECT
FirstName,
LastName,
Address,
FirstName||' '||LastName ||' ' || Address||', '||City||' '||State||' '||PostalCode AS &quot;Mailing Address&quot;
FROM
Customer
WHERE
Country = &quot;USA&quot;</sql><sql name="sql1.sql">SELECT
FirstName AS[Customer First Name],
LastName AS 'Customer Last Name',
Email AS EMAIL
FROM 
Customer
ORDER BY 
FirstName ASC</sql><sql name="sql2.sql">SELECT
InvoiceDate,
BillingAddress,
BillingCity,
total
FROM
Invoice
WHERE
total IN(1.98, 3.96)
ORDER by
total
</sql><current_tab id="12"/></tab_sql></sqlb_project>
